version: '3'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mri
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"   
      - "9001:9001"    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  main-service:
    build: ./main-service
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # PostgreSQL
      POSTGRES_DB_HOST: postgres
      POSTGRES_DB_PORT: "5432"
      POSTGRES_DB_USER: postgres
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: mri

      # Redis
      REDIS_DB_HOST: redis
      REDIS_DB_PORT: "6379"
      REDIS_DB_PASSWORD: password

      # MinIO (внутренняя и публичная точки доступа)
      MINIO_INTERNAL_ENDPOINT: "minio:9000"
      MINIO_PUBLIC_ENDPOINT:  "localhost:9000"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: mri-scans
      MINIO_SSL: "false"

 
  ml-service:
    build: ./ml-service        
    command: python3 main.py    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"

      # PostgreSQL
      USER_DB_HOST: postgres
      USER_DB_PORT: "5432"
      USER_DB_USER: postgres
      USER_DB_PASSWORD: postgres
      USER_DB_NAME: mri

      # MinIO
      MINIO_ENDPOINT: "minio:9000"    
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: mri-scans
      MINIO_SECURE: "false"

volumes:
  postgres-data:
  minio-data:
